/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cloudera.impala.thrift;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TPartitionStats implements org.apache.thrift.TBase<TPartitionStats, TPartitionStats._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TPartitionStats");

  private static final org.apache.thrift.protocol.TField STATS_FIELD_DESC = new org.apache.thrift.protocol.TField("stats", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField INTERMEDIATE_COL_STATS_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediate_col_stats", org.apache.thrift.protocol.TType.MAP, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TPartitionStatsStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TPartitionStatsTupleSchemeFactory());
  }

  public TTableStats stats; // required
  public Map<String,TIntermediateColumnStats> intermediate_col_stats; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    STATS((short)1, "stats"),
    INTERMEDIATE_COL_STATS((short)2, "intermediate_col_stats");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STATS
          return STATS;
        case 2: // INTERMEDIATE_COL_STATS
          return INTERMEDIATE_COL_STATS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.INTERMEDIATE_COL_STATS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STATS, new org.apache.thrift.meta_data.FieldMetaData("stats", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TTableStats.class)));
    tmpMap.put(_Fields.INTERMEDIATE_COL_STATS, new org.apache.thrift.meta_data.FieldMetaData("intermediate_col_stats", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TIntermediateColumnStats.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TPartitionStats.class, metaDataMap);
  }

  public TPartitionStats() {
  }

  public TPartitionStats(
    TTableStats stats)
  {
    this();
    this.stats = stats;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TPartitionStats(TPartitionStats other) {
    if (other.isSetStats()) {
      this.stats = new TTableStats(other.stats);
    }
    if (other.isSetIntermediate_col_stats()) {
      Map<String,TIntermediateColumnStats> __this__intermediate_col_stats = new HashMap<String,TIntermediateColumnStats>();
      for (Map.Entry<String, TIntermediateColumnStats> other_element : other.intermediate_col_stats.entrySet()) {

        String other_element_key = other_element.getKey();
        TIntermediateColumnStats other_element_value = other_element.getValue();

        String __this__intermediate_col_stats_copy_key = other_element_key;

        TIntermediateColumnStats __this__intermediate_col_stats_copy_value = new TIntermediateColumnStats(other_element_value);

        __this__intermediate_col_stats.put(__this__intermediate_col_stats_copy_key, __this__intermediate_col_stats_copy_value);
      }
      this.intermediate_col_stats = __this__intermediate_col_stats;
    }
  }

  public TPartitionStats deepCopy() {
    return new TPartitionStats(this);
  }

  @Override
  public void clear() {
    this.stats = null;
    this.intermediate_col_stats = null;
  }

  public TTableStats getStats() {
    return this.stats;
  }

  public TPartitionStats setStats(TTableStats stats) {
    this.stats = stats;
    return this;
  }

  public void unsetStats() {
    this.stats = null;
  }

  /** Returns true if field stats is set (has been assigned a value) and false otherwise */
  public boolean isSetStats() {
    return this.stats != null;
  }

  public void setStatsIsSet(boolean value) {
    if (!value) {
      this.stats = null;
    }
  }

  public int getIntermediate_col_statsSize() {
    return (this.intermediate_col_stats == null) ? 0 : this.intermediate_col_stats.size();
  }

  public void putToIntermediate_col_stats(String key, TIntermediateColumnStats val) {
    if (this.intermediate_col_stats == null) {
      this.intermediate_col_stats = new HashMap<String,TIntermediateColumnStats>();
    }
    this.intermediate_col_stats.put(key, val);
  }

  public Map<String,TIntermediateColumnStats> getIntermediate_col_stats() {
    return this.intermediate_col_stats;
  }

  public TPartitionStats setIntermediate_col_stats(Map<String,TIntermediateColumnStats> intermediate_col_stats) {
    this.intermediate_col_stats = intermediate_col_stats;
    return this;
  }

  public void unsetIntermediate_col_stats() {
    this.intermediate_col_stats = null;
  }

  /** Returns true if field intermediate_col_stats is set (has been assigned a value) and false otherwise */
  public boolean isSetIntermediate_col_stats() {
    return this.intermediate_col_stats != null;
  }

  public void setIntermediate_col_statsIsSet(boolean value) {
    if (!value) {
      this.intermediate_col_stats = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case STATS:
      if (value == null) {
        unsetStats();
      } else {
        setStats((TTableStats)value);
      }
      break;

    case INTERMEDIATE_COL_STATS:
      if (value == null) {
        unsetIntermediate_col_stats();
      } else {
        setIntermediate_col_stats((Map<String,TIntermediateColumnStats>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case STATS:
      return getStats();

    case INTERMEDIATE_COL_STATS:
      return getIntermediate_col_stats();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case STATS:
      return isSetStats();
    case INTERMEDIATE_COL_STATS:
      return isSetIntermediate_col_stats();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TPartitionStats)
      return this.equals((TPartitionStats)that);
    return false;
  }

  public boolean equals(TPartitionStats that) {
    if (that == null)
      return false;

    boolean this_present_stats = true && this.isSetStats();
    boolean that_present_stats = true && that.isSetStats();
    if (this_present_stats || that_present_stats) {
      if (!(this_present_stats && that_present_stats))
        return false;
      if (!this.stats.equals(that.stats))
        return false;
    }

    boolean this_present_intermediate_col_stats = true && this.isSetIntermediate_col_stats();
    boolean that_present_intermediate_col_stats = true && that.isSetIntermediate_col_stats();
    if (this_present_intermediate_col_stats || that_present_intermediate_col_stats) {
      if (!(this_present_intermediate_col_stats && that_present_intermediate_col_stats))
        return false;
      if (!this.intermediate_col_stats.equals(that.intermediate_col_stats))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_stats = true && (isSetStats());
    builder.append(present_stats);
    if (present_stats)
      builder.append(stats);

    boolean present_intermediate_col_stats = true && (isSetIntermediate_col_stats());
    builder.append(present_intermediate_col_stats);
    if (present_intermediate_col_stats)
      builder.append(intermediate_col_stats);

    return builder.toHashCode();
  }

  public int compareTo(TPartitionStats other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    TPartitionStats typedOther = (TPartitionStats)other;

    lastComparison = Boolean.valueOf(isSetStats()).compareTo(typedOther.isSetStats());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStats()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stats, typedOther.stats);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntermediate_col_stats()).compareTo(typedOther.isSetIntermediate_col_stats());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntermediate_col_stats()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediate_col_stats, typedOther.intermediate_col_stats);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TPartitionStats(");
    boolean first = true;

    sb.append("stats:");
    if (this.stats == null) {
      sb.append("null");
    } else {
      sb.append(this.stats);
    }
    first = false;
    if (isSetIntermediate_col_stats()) {
      if (!first) sb.append(", ");
      sb.append("intermediate_col_stats:");
      if (this.intermediate_col_stats == null) {
        sb.append("null");
      } else {
        sb.append(this.intermediate_col_stats);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (stats == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'stats' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (stats != null) {
      stats.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TPartitionStatsStandardSchemeFactory implements SchemeFactory {
    public TPartitionStatsStandardScheme getScheme() {
      return new TPartitionStatsStandardScheme();
    }
  }

  private static class TPartitionStatsStandardScheme extends StandardScheme<TPartitionStats> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TPartitionStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STATS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.stats = new TTableStats();
              struct.stats.read(iprot);
              struct.setStatsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // INTERMEDIATE_COL_STATS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.intermediate_col_stats = new HashMap<String,TIntermediateColumnStats>(2*_map0.size);
                for (int _i1 = 0; _i1 < _map0.size; ++_i1)
                {
                  String _key2; // required
                  TIntermediateColumnStats _val3; // required
                  _key2 = iprot.readString();
                  _val3 = new TIntermediateColumnStats();
                  _val3.read(iprot);
                  struct.intermediate_col_stats.put(_key2, _val3);
                }
                iprot.readMapEnd();
              }
              struct.setIntermediate_col_statsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TPartitionStats struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.stats != null) {
        oprot.writeFieldBegin(STATS_FIELD_DESC);
        struct.stats.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.intermediate_col_stats != null) {
        if (struct.isSetIntermediate_col_stats()) {
          oprot.writeFieldBegin(INTERMEDIATE_COL_STATS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.intermediate_col_stats.size()));
            for (Map.Entry<String, TIntermediateColumnStats> _iter4 : struct.intermediate_col_stats.entrySet())
            {
              oprot.writeString(_iter4.getKey());
              _iter4.getValue().write(oprot);
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TPartitionStatsTupleSchemeFactory implements SchemeFactory {
    public TPartitionStatsTupleScheme getScheme() {
      return new TPartitionStatsTupleScheme();
    }
  }

  private static class TPartitionStatsTupleScheme extends TupleScheme<TPartitionStats> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TPartitionStats struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.stats.write(oprot);
      BitSet optionals = new BitSet();
      if (struct.isSetIntermediate_col_stats()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetIntermediate_col_stats()) {
        {
          oprot.writeI32(struct.intermediate_col_stats.size());
          for (Map.Entry<String, TIntermediateColumnStats> _iter5 : struct.intermediate_col_stats.entrySet())
          {
            oprot.writeString(_iter5.getKey());
            _iter5.getValue().write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TPartitionStats struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.stats = new TTableStats();
      struct.stats.read(iprot);
      struct.setStatsIsSet(true);
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TMap _map6 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.intermediate_col_stats = new HashMap<String,TIntermediateColumnStats>(2*_map6.size);
          for (int _i7 = 0; _i7 < _map6.size; ++_i7)
          {
            String _key8; // required
            TIntermediateColumnStats _val9; // required
            _key8 = iprot.readString();
            _val9 = new TIntermediateColumnStats();
            _val9.read(iprot);
            struct.intermediate_col_stats.put(_key8, _val9);
          }
        }
        struct.setIntermediate_col_statsIsSet(true);
      }
    }
  }

}

